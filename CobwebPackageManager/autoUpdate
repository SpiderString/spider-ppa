local args={...}
local forceUpgrade=args[1]
local doUpdate=false
local packageVersionsPath="macros/CobwebPackageManager/packageVersions"
local packageListPath="macros/CobwebPackageManager/packageList"
local autoUpdateColor="&6" --gold

doUpdate=doUpdate or forceUpgrade
function getInstalledPackages()
  run("CobwebPackageManager/spiderLib")
  local versionsFile=catRel(packageVersionsPath)
  local packages={}
  for id, line in pairs(versionsFile) do
    local package=line:sub(1, line:find(":")-1):gsub("[%s]+", "")
    table.insert(packages, package)
  end
  return packages
end

function upgrade()
  run("CobwebPackageManager/fileLib")
  advLog({text="Checking for updates", color=autoUpdateColor})
  advLog({text="Found "..getRepositories(true).." new packages", color=autoUpdateColor})
  local newPackages={}
  for id, package in pairs(getInstalledPackages()) do
    local newPackage=getPackage(package,true)
    if newPackage~=nil then
      table.insert(newPackages, newPackage)
    end
  end
  local newPackageString=""
  for id, package in pairs(newPackages) do
    newPackageString=newPackageString..", "..package
  end
  newPackageString=newPackageString:gsub("^, ", "")
  advLog({text="Upgrades Complete", color=autoUpdateColor, tooltip=newPackageString})

end

if doUpdate then
  upgrade()
end
