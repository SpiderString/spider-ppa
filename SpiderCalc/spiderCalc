--Main Method, should be bound to the "Chat" event or the "ChatSendFilter" event and nothing else.

--Configurable Variables
local acceptCommandsFromOthers=false --set to false to ignore commands from other players
local acceptCommandsFromPM=false --set to true to allow private messages triggering the script
local commandPrefix="=" --prefix that should be at the start of the line for a calculator command
local eqColor="&6" --color used for answer output

--Inconfigurable Variables. No Touch.
local args={...}

local cli=run("commandLib.lua")
local caller, equation
local self=getPlayer()["name"]

if args[2]=="Chat" then
  caller=cli.getUsername(args[4], commandPrefix)
  equation=cli.stripUsername(args[4])
else
  equation=args[3]
  caller=self
end
commandArgs=cli.getArguments(equation, commandPrefix)
--no command
if args[2]=="ChatSendFilter" and not commandArgs then
  return args[3]
end

if equation and commandArgs then
  --check if the help command was run
  if commandArgs[1]=="help" and (caller==self or acceptCommandsFromOthers) then
    run("helpLib")
    help(caller, commandArgs[1], commandArgs)
    equation=false
  --graph command
  elseif commandArgs[1]=="graph" and (caller==self or acceptCommandsFromOthers) then
    run("graph")
    graph(commandArgs[1], commandArgs)
    equation=false
  elseif commandArgs[1]=="clear" and (caller==self or acceptCommandsFromOthers) then
    hud3D.clearAll()
    SPIDERCALCGRAPHPOINTS={}
    equation=false
  elseif commandArgs[1]=="translate" and (caller==self or acceptCommandsFromOthers) then
    run("graph")
    local vector=commandArgs
    table.remove(vector, 1)
    translate(unpack(vector))
    equation=false
  end
end
--Begin evaluation
if equation and equation:match("^"..commandPrefix) and (caller==self or acceptCommandsFromOthers) then
  run("calcLib")
  equation=equation:gsub("^"..commandPrefix, "")
  equation=removeSpaces(equation)
  equation=equation:lower()
  local origEquation=equation
  equation=tokenize(equation)
  equation=insertAstericks(equation)
  run("shuntYard")
  equation=convertToPostfix(equation)
  run("postfixInterpreter")
  equation=evaluate(equation)
  SPIDERCALCLASTANS=equation

  --output
  if caller==self then
    advLog({text="<SpiderCalc>: "..origEquation.."="..equation, color=eqColor, tooltip=equation})
  else
    say("<SpiderCalc>: "..origEquation.."="..equation)
  end
end
